// This file was generated by RobotBuilder v0.0.2.
package org.usfirst.frc1884.RobotCode2013.subsystems;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.networktables.NetworkTable;
import org.usfirst.frc1884.RobotCode2013.Robot;
import org.usfirst.frc1884.RobotCode2013.RobotMap;
import org.usfirst.frc1884.RobotCode2013.commands.MiscellaneousCommand;
/**
 * This class controls all the miscellaneous functions of the robot
 */
public class Other extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    Compressor compressor = RobotMap.otherCompressor;
    Gyro gyro = RobotMap.otherGyro;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    ADXL345_I2C accelerometer = new ADXL345_I2C(1, ADXL345_I2C.DataFormat_Range.k4G); //@todo: check the slot number
    
    NetworkTable sensorTable = NetworkTable.getTable("sensorTable");
    public double gyroAngleZero = 0.0; //@todo: update this with kalman filter value
    
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new MiscellaneousCommand());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        gyro.reset();
        gyro.setSensitivity(1.25);
    }
    
    public void startCompressor() {
        compressor.start();
    }
    
    public void stopCompressor() {
        compressor.stop();
    }
    
    public double getGyroValue() {
        return gyro.getAngle() - gyroAngleZero;
    }
    
    public void updateSensorValues() {
        sensorTable.putNumber("gyroValue", gyro.getAngle() - gyroAngleZero);
        sensorTable.putNumber("forwardsAcceleration", accelerometer.getAcceleration(ADXL345_I2C.Axes.kY));
        sensorTable.putNumber("leftwardsAcceleration", -accelerometer.getAcceleration(ADXL345_I2C.Axes.kX));
        sensorTable.putNumber("shooterAngle", Robot.shootingPitchControl.getShooterAngle());
        sensorTable.putBoolean("frontLightSensor", Robot.chassis.getFrontLightSensor());
        sensorTable.putBoolean("backLightSensor", Robot.chassis.getBackLightSensor());
    }
}
